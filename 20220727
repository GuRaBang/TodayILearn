---
layout: post
title: 2022/07/27
---

## Package.json

- scripts는 패키지의 생명주기 동안 반복해서 실행하는 스크립트 명령어를 담고있다.
- dependencies는 프로그램에 필요한 패키지 이름과 버전을 저장하고 있다.
- devDependencies는 개발할 때나 프로그램을 테스트할 때 필요한 패키지를 저장하고 있다. 즉, production시에는 필요가 없는 패키지다.

# Scss(Sass)

## math.div()

일단, Sass는 /를 연산자로 지원하긴 하지만 CSS에서 /는 구분자 역할을 하기때문에 math.div()라는 함수를 사용한다. 만약 Sass에서 /를 사용하는 경우 나눗셈 연산자인지 구분자인지 애매하기 때문에 상황마다 다른 역할을 한다. 

공식문서에따르면 다음 경우에만 나눗셈으로 동작한다. 

- 숫자리터럴이 아닌 경우??
- 결과값이 변수에 저장되거나 함수에 반환되는 경우
- 괄호로 묶여있는 경우
- 결과가 /이 아닌 다른 연산의 피연산자로 사용되는 경우

## use, import의 차이

- @use는 다른 Sass파일에 있는 mixin, 함수, 변수를 불러온다. @use를 사용한 파일 내에서만 접근가능하다.
- @import도 Sass와 Css를 불러와서 mixin, 함수, 변수에 접근가능하다.

---

@use는 변수, 함수, mixin을 전역이 아닌 현재 파일내에서만 사용할 수 있도록 한다. 또한, @use는 각 파일에서 단 한번만 로드되며, 시작시점에 선언된다. 

 

# CSS

## clamp(MIN, VAL, MAX)

clamp함수는 최댓값과 최솟값의 범위에서 사이값을 고른다. 중간에 있는 값이 이 범위를 벗어나는 경우 최솟값(VAL이 MIN보다 작은 경우)이나 최댓값(VAL이 MAX보다 큰 경우)을 선택하고 범위 안에 존재하는 경우 VAL값을 선택한다. 따라서, font-size에 clamp함수를 사용하는 경우 중간값에 viewport크기를 넣어주면 viewport에 따라 글자  크기가 변하게 만들 수 있다.

## :focus-visible

focus를 받은 요소와 초점이 필요하다고 UA가 판단하는 요소에 적용된다. 즉, 키보드로 접근하는 경우를 뜻한다. 

## :focus-within

focus를 받았거나 focus를 받은 요소를 포함하는 요소를 나타낸다. 

예를들어, 전체 로그인 영역에 대해 의사 클래스를 적용하면 아이디나 비밀번호가 focus받았을 때 전체 로그인 영역에 효과를 줄 수 있다.
